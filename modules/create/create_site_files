#!/usr/bin/env bash

create_site_files(){
	hook "pre_create_site_files" "$site" "$domain" "$path"
	# Create site folder with vvv-init.sh file
	# =============================================================================
	cd "$path"/"$sites_folder" || error "Could not change directory."
	secondary_info "Creating site directory, wp-cli.yml, and vvv-init.sh file... "
	if [ ! -d "$site" ]; then
		mkdir "$site"
	fi
	cd "$site" || error "Could not change directory."

	if [ "$no_wp" = "false" ]; then
		printf "path: %s" "$web_root" > wp-cli.yml
	fi

	wp_debug_text=''
	if [[ $wp_debug = 'y' ]]; then
		wp_debug_text=" --extra-php <<PHP
define('WP_DEBUG', true);
define('WP_DEBUG_DISPLAY', false);
define('WP_DEBUG_LOG', true);
define('SCRIPT_DEBUG', true);
define('JETPACK_DEV_DEBUG', true);
PHP"
	fi

	blueprint_text=''
	if [[ ! -z "$blueprint" ]]; then
		cp "$path"/vv-blueprints.json "$path"/"$sites_folder"/"$site"/vv-blueprints.json
		hook "pre_blueprint_text_output"
		blueprint_text="curl -o vv-install -s https://raw.githubusercontent.com/bradp/vv/vv-install/vv-install && php vv-install $blueprint $web_root $site $domain && rm vv-blueprints.json"
		hook "post_blueprint_text_output"
	fi

	if [[ ! -z "$db_import" ]]; then
		hook "pre_site_creation_db_import"
		cp "$db_import" "$path"/"$sites_folder"/"$site"/"$site".sql
		hook "post_site_creation_db_import"
	fi

	db_init=""
	if [[ ! -z "$db_import" ]]; then
		db_init="wp db import ../$site.sql --allow-root && rm ../$site.sql"
	fi

	hooked_pre_vvv_init_no_wp=$(hook "hooked_pre_vvv_init_no_wp")
	hooked_extra_wp_vvv_init_no_wp=$(hook "hooked_extra_wp_vvv_init_no_wp")
	hooked_post_vvv_init_no_wp=$(hook "hooked_post_vvv_init_no_wp")

	if [ "$no_wp" = "true" ]; then
		{
			echo "$hooked_pre_vvv_init_no_wp"
			echo "if [ ! -d \"./$web_root\" ]; then"
			echo "  mkdir ./$web_root"
			echo "fi"
			echo "cd ./$web_root"
			echo "$hooked_extra_wp_vvv_init_no_wp"
			echo "$hooked_post_vvv_init_no_wp"
		} >> vvv-init.sh
	fi

	if [ "$no_wp_with_db" = "true" ]; then
		if [ ! -e "$path"/database/init-custom.sql ]; then
			touch "$path"/database/init-custom.sql
		fi
		printf "\nCREATE DATABASE IF NOT EXISTS \`%s\`;\n GRANT ALL PRIVILEGES ON \`%s\`.* TO 'wp'@'localhost' IDENTIFIED BY 'wp';\n" "$db_name" "$db_name" >> "$path"/database/init-custom.sql

		if [[ ! -z "$db_import" ]]; then
			{
				echo "$hooked_pre_vvv_init_no_wp"
				echo "if [ ! -d \"$web_root/wp-admin\" ]; then"
				echo "	echo 'Making the correct directories and adding DB in $site/$web_root...'"
				echo "	if [ ! -d \"./$web_root\" ]; then"
				echo "		mkdir ./$web_root"
				echo "	fi"
				echo "	cd ./$web_root"
				echo "	$db_init"
				echo "	"
				echo "	$hooked_extra_wp_vvv_init_no_wp"
				echo "	cd -"
				echo "$blueprint_text"
				echo "fi"
				echo "$hooked_post_vvv_init_no_wp"
			} >> vvv-init.sh
		fi
	fi

	if [ "$no_wp" = "false" ]; then
		# Create SQL commands for database creation
		# =============================================================================
		if [ ! -e "$path"/database/init-custom.sql ]; then
			touch "$path"/database/init-custom.sql
		fi

		maybe_remove_defaults=""
		if [[ "$remove_defaults" = "y" ]]; then
			maybe_remove_defaults="wp theme delete twentythirteen --allow-root; wp theme delete twentyfourteen --allow-root; wp theme delete twentyfifteen --allow-root; wp theme delete twentysixteen --allow-root; wp plugin delete hello --allow-root; wp plugin delete akismet --allow-root; git checkout HEAD ."
		fi

		maybe_download_search_and_replace=""
		if [[ "$download_search_and_replace" = "true" ]]; then
			maybe_download_search_and_replace="wget https://github.com/interconnectit/Search-Replace-DB/archive/master.zip && unzip master.zip && rm master.zip"
		fi

		wp_db_prefix="wp_"
		if [[ ! -z "$db_prefix" ]]; then
			wp_db_prefix=$db_prefix
		fi

		wp_db_lang="en_US"
		if [[ ! -z "$db_lang" ]]; then
			wp_db_lang=$db_lang
		fi

		install_method="wp core download --locale=$wp_db_lang --allow-root $installversion"
		config="wp core config --dbname=\"$db_name\" --dbuser=wp --dbpass=wp --dbhost=\"localhost\" --dbprefix=$wp_db_prefix --locale=$wp_db_lang --allow-root$wp_debug_text"
		core="wp core $install_text --url=$domain --title=\"$site\" --admin_user=$username --admin_password=$password --admin_email=$email --allow-root"
		if [ "$wpskeleton" = "true" ]; then
			install_method="git clone --recursive https://github.com/markjaquith/WordPress-Skeleton.git . "
			config="echo \"<?php define( 'DB_NAME', '$db_name' ); define( 'DB_USER', 'wp' ); define( 'DB_PASSWORD', 'wp' ); define( 'DB_HOST', 'localhost' );\" >> local-config.php"
			core=""
		fi
		maybe_trunk=""
		if [ "$use_trunk" = "true" ];then
			maybe_trunk="wp core update https://wordpress.org/nightly-builds/wordpress-latest.zip --allow-root"
		fi

		if [ "$bedrock_init" = "true" ]; then
			install_method="composer create-project roots/bedrock htdocs"
			config="printf \"DB_NAME=$db_name\nDB_USER=wp\nDB_PASSWORD=wp\nDB_HOST=localhost\n\nWP_ENV=development\nWP_HOME=http://$domain\nWP_SITEURL=http://$domain/wp\" >> htdocs/.env"
			core="$core --path=\"htdocs/web/wp\""
		fi
		hook "pre_write_vvv_init"
		printf "\nCREATE DATABASE IF NOT EXISTS \`%s\`;\n GRANT ALL PRIVILEGES ON \`%s\`.* TO 'wp'@'localhost' IDENTIFIED BY 'wp';\n" "$db_name" "$db_name" >> "$path"/database/init-custom.sql

		hooked_pre_vvv_init=$(hook "hooked_pre_vvv_init")
		hooked_extra_wp_vvv_init=$(hook "hooked_extra_wp_vvv_init")
		hooked_post_vvv_init=$(hook "hooked_post_vvv_init")

		{
			echo "$hooked_pre_vvv_init"
			echo "if [ ! -d \"$web_root/wp-admin\" ]; then"
			echo "	echo 'Installing WordPress $version in $site/$web_root...'"
			echo "	if [ ! -d \"./$web_root\" ]; then"
			echo "		mkdir ./$web_root"
			echo "	fi"
			echo "	cd ./$web_root"
			echo "	$install_method"
			echo "	$config"
			echo "	$core"
			echo "	$add_placeholder_content"
			echo "	$db_init"
			echo "  $maybe_remove_defaults"
			echo "  $maybe_download_search_and_replace"
			echo "	$hooked_extra_wp_vvv_init"
			echo "	"
			echo "	cd -"
			echo "$blueprint_text"
			echo "fi"
			echo "$maybe_trunk"
			echo "$hooked_post_vvv_init"
		} >> vvv-init.sh
		hook "post_write_vvv_init"
	fi

	echo "Done"

	# Add vvv-hosts file for domain in the site's "$sites_folder" root
	# =============================================================================
	cd "$path"/"$sites_folder"/"$site" || error "Could not change directory."
	hook "pre_write_vvv_hosts"
	secondary_info "Adding $domain to new vvv-hosts file... "
	touch vvv-hosts
	printf "%s\n" "$domain" >> vvv-hosts
	hook "post_write_vvv_hosts"
	echo "Done"

	if [ ! -z "$git_repo" ]; then
		git clone --recursive "$git_repo" $web_root/wp-content
	fi

	# Add site conf file to nginx-config
	# =============================================================================
	cd "$path"/config/nginx-config/sites || error "Could not change directory."
	secondary_info "Creating nginx-config/sites/$site.conf... "

	nginx_domain_text="$domain"
	if [[ $multisite = 'y' ]] && [[ $ms_type = 'subdomain' ]]; then
		nginx_domain_text="$domain *.$domain"
	fi
	xip_domain=" ~^$site\\\.\\\d+\\\.\\\d+\\\.\\\d+\\\.\\\d+\\\.xip\\\.io$"
	nginx_domain_text="$nginx_domain_text""$xip_domain"

	sed -e "s/testserver\.com/$nginx_domain_text/" \
		-e "s|wordpress-local|$site/$web_root|" local-nginx-example.conf-sample > "$site".conf

	if [[ $image_proxy = "true" ]]; then
		sed -e $'s|\}| location ~ ^/wp-content/uploads/(.*) \{ if (!-f $request_filename) \{ rewrite ^/wp-content/uploads/(.*)$ http://LIVE_URL/wp-content/uploads/$1 redirect; \} \} \}|' -e "s|LIVE_URL|$live_site_url|" "$site".conf > tmp.conf
		rm "$site".conf
		mv tmp.conf "$site".conf
	fi

	echo "Done"
}

