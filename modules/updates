#!/usr/bin/env bash

check_for_update() {
	hook "pre_update_check"
	if [[ ! -z $(which curl) ]]; then
		hook "pre_github_update_check"
		github_version=$(curl -s https://api.github.com/repos/bradp/vv/tags | grep --color=never "\"name\": \"" | head -n 1 | sed 's/"name": "//' | sed 's/",//' | sed 's/ //g' )
		hook "post_github_update_check"
		if [[ ! -z "$github_version" ]]; then
			if [[ ! "$version_number" = "$github_version" ]]; then
				hook "pre_out_of_date_vv"
				info "Your version of vv ( $version_number )  does not match the current Github version ( $github_version ). Please update with vv --update"
				hook "post_out_of_date_vv"
			fi
		fi
	fi
	hook "post_update_check"
}

check_how_installed() {
	hook "pre_check_how_installed"
	if [[ ! -z $(which brew) ]]; then
		brew_install_location=$(brew --prefix)
		if [[ -f $brew_install_location"/bin/vv" ]]; then
			installed_with_brew="true"
		else
			installed_with_brew="false"
		fi
	fi
	hook "post_check_how_installed"
}

install_update() {
	hook "pre_install_update"
	check_how_installed
	update_vv
	hook "post_install_update"
}

update_vv() {
	hook "pre_update_vv"
	if [[ $installed_with_brew = "true" ]]; then
		info "Updating vv via Brew..."
		hook "pre_brew_update_vv"
		brew cleanup
		brew reinstall vv
		hook "post_brew_update_vv"
	else
		hook "pre_bootstrap_update_vv"
		info "Updating vv..."
		vv_bootstrap_update
		hook "post_bootstrap_update_vv"
	fi
	hook "post_update_vv"
}

vv_bootstrap_update() {
	hook "pre_vv_bootstrap_update"
	github_version=$(curl -s https://api.github.com/repos/bradp/vv/tags | grep --color=never "\"name\": \"" | head -n 1 | sed 's/"name": "//' | sed 's/",//' | sed 's/ //g' )
	download_link=https://github.com/bradp/vv/archive/"$github_version".tar.gz
	vv_install_location=$(which vv)
	curl -L -o "$HOME/$github_version.tar.gz" "$download_link" 2>/dev/null
	tar -C "$HOME" -zxvf "$HOME/$github_version.tar.gz" 2>/dev/null
	rm "$HOME/$github_version.tar.gz"
	cat "$HOME/vv-$github_version/vv" > "$vv_install_location"
	rm "$HOME/vv-$github_version"
	success "vv has been updated to the latest version. Thanks!"
	hook "post_vv_bootstrap_update"
}

auto_update_main() {
	hook "pre_auto_update_vv"
	if [[ ! $auto_update_disable = "true" ]]; then
		if [ ! -f "$HOME"/.vv-update ]; then
			_update_vv_update
		else
			# TODO fix shellcheck error
			# shellcheck disable=SC1090
			source "$HOME"/.vv-update

			epoch_diff=$(($(_current_epoch) - DAYS_SINCE_UPDATE_CHECK))
			epoch_target=7
			if [[ $epoch_diff -gt $epoch_target ]]; then
				info "vv is out of date. Checking for update."
				github_version=$(curl -s https://api.github.com/repos/bradp/vv/tags | grep "\"name\": \"" | head -n 1 | sed 's/"name": "//' | sed 's/",//' | sed 's/ //g' )
				if [[ ! "$version_number" = "$github_version" ]]; then
					update_vv
				fi

				rm "$HOME"/.vv-update
				_update_vv_update
			fi
		fi
	fi
	hook "post_auto_update_vv"
}

_current_epoch() {
  seconds=$(date +%s)
  echo $((seconds/60/60/24))
}

_update_vv_update() {
	hook "pre_vv_auto_update_update"
	touch "$HOME"/.vv-update
	echo "DAYS_SINCE_UPDATE_CHECK=$(_current_epoch)" > "$HOME"/.vv-update
	hook "post_vv_auto_update_update"
}
